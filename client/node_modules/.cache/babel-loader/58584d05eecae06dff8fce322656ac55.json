{"ast":null,"code":"// import { useMemo, useCallback, useState, useRef, useEffect } from \"react\";\n// import React from \"react\";\n// import { createPortal } from \"react-dom\";\n// import styles from \"./PortalPopup.module.css\";\n\n// const PortalPopup = ({\n//   children,\n//   overlayColor,\n//   placement = \"Centered\",\n//   onOutsideClick,\n//   zIndex = 100,\n//   left = 0,\n//   right = 0,\n//   top = 0,\n//   bottom = 0,\n//   relativeLayerRef,\n// }) => {\n//   const relContainerRef = useRef(null);\n//   const [relativeStyle, setRelativeStyle] = useState({});\n//   const popupStyle = useMemo(() => {\n//     const style = {};\n//     style.zIndex = zIndex;\n\n//     if (overlayColor) {\n//       style.backgroundColor = overlayColor;\n//     }\n//     // if (!relativeLayerRef?.current) {\n//     //   switch (placement) {\n//     //     case \"Centered\":\n//     //       style.alignItems = \"center\";\n//     //       style.justifyContent = \"center\";\n//     //       break;\n//     //     case \"Top left\":\n//     //       style.alignItems = \"flex-start\";\n//     //       break;\n//     //     case \"Top center\":\n//     //       style.alignItems = \"center\";\n//     //       break;\n//     //     case \"Top right\":\n//     //       style.alignItems = \"flex-end\";\n//     //       break;\n//     //     case \"Bottom left\":\n//     //       style.alignItems = \"flex-start\";\n//     //       style.justifyContent = \"flex-end\";\n//     //       break;\n//     //     case \"Bottom center\":\n//     //       style.alignItems = \"center\";\n//     //       style.justifyContent = \"flex-end\";\n//     //       break;\n//     //     case \"Bottom right\":\n//     //       style.alignItems = \"flex-end\";\n//     //       style.justifyContent = \"flex-end\";\n//     //       break;\n//     //   }\n//     // }\n//     return style;\n//   }, [placement, overlayColor, zIndex, relativeLayerRef?.current]);\n\n//   const setPosition = useCallback(() => {\n//     const relativeItem = relativeLayerRef?.current?.getBoundingClientRect();\n//     const containerItem = relContainerRef?.current?.getBoundingClientRect();\n//     const style = {};\n//     if (relativeItem && containerItem) {\n//       const {\n//         x: relativeX,\n//         y: relativeY,\n//         width: relativeW,\n//         height: relativeH,\n//       } = relativeItem;\n//       const { width: containerW, height: containerH } = containerItem;\n//       style.position = \"absolute\";\n//       switch (placement) {\n//         case \"Top left\":\n//           style.top = relativeY - containerH - top;\n//           style.left = relativeX + left;\n//           break;\n//         case \"Top right\":\n//           style.top = relativeY - containerH - top;\n//           style.left = relativeX + relativeW - containerW - right;\n//           break;\n//         case \"Bottom left\":\n//           style.top = relativeY + relativeH + bottom;\n//           style.left = relativeX + left;\n//           break;\n//         case \"Bottom right\":\n//           style.top = relativeY + relativeH + bottom;\n//           style.left = relativeX + relativeW - containerW - right;\n//           break;\n//       }\n\n//       setRelativeStyle(style);\n//     } else {\n//       style.maxWidth = \"90%\";\n//       style.maxHeight = \"90%\";\n//       setRelativeStyle(style);\n//     }\n//   }, [\n//     left,\n//     right,\n//     top,\n//     bottom,\n//     placement,\n//     relativeLayerRef?.current,\n//     relContainerRef?.current,\n//   ]);\n\n//   useEffect(() => {\n//     setPosition();\n\n//     window.addEventListener(\"resize\", setPosition);\n//     window.addEventListener(\"scroll\", setPosition, true);\n\n//     return () => {\n//       window.removeEventListener(\"resize\", setPosition);\n//       window.removeEventListener(\"scroll\", setPosition, true);\n//     };\n//   }, [setPosition]);\n\n//   const onOverlayClick = useCallback(\n//     (e) => {\n//       if (\n//         onOutsideClick &&\n//         e.target.classList.contains(styles.portalPopupOverlay)\n//       ) {\n//         onOutsideClick();\n//       }\n//       e.stopPropagation();\n//     },\n//     [onOutsideClick]\n//   );\n\n//   return (\n//     <Portal>\n//       <div\n//         className={styles.portalPopupOverlay}\n//         style={popupStyle}\n//         onClick={onOverlayClick}\n//       >\n//         <div ref={relContainerRef} style={relativeStyle}>\n//           {children}\n//         </div>\n//       </div>\n//     </Portal>\n//   );\n// };\n\n// export const Portal = ({ children, containerId = \"portals\" }) => {\n//   let portalsDiv = document.getElementById(containerId);\n//   if (!portalsDiv) {\n//     portalsDiv = document.createElement(\"div\");\n//     portalsDiv.setAttribute(\"id\", containerId);\n//     document.body.appendChild(portalsDiv);\n//   }\n\n//   return createPortal(children, portalsDiv);\n// };\n// export default PortalPopup;","map":{"version":3,"names":[],"sources":["C:/Users/YUDHVIR/Pictures/Honey/Code/BeeNation_v.1.0/client/src/components/PortalPopup.js"],"sourcesContent":["// import { useMemo, useCallback, useState, useRef, useEffect } from \"react\";\n// import React from \"react\";\n// import { createPortal } from \"react-dom\";\n// import styles from \"./PortalPopup.module.css\";\n\n// const PortalPopup = ({\n//   children,\n//   overlayColor,\n//   placement = \"Centered\",\n//   onOutsideClick,\n//   zIndex = 100,\n//   left = 0,\n//   right = 0,\n//   top = 0,\n//   bottom = 0,\n//   relativeLayerRef,\n// }) => {\n//   const relContainerRef = useRef(null);\n//   const [relativeStyle, setRelativeStyle] = useState({});\n//   const popupStyle = useMemo(() => {\n//     const style = {};\n//     style.zIndex = zIndex;\n\n//     if (overlayColor) {\n//       style.backgroundColor = overlayColor;\n//     }\n//     // if (!relativeLayerRef?.current) {\n//     //   switch (placement) {\n//     //     case \"Centered\":\n//     //       style.alignItems = \"center\";\n//     //       style.justifyContent = \"center\";\n//     //       break;\n//     //     case \"Top left\":\n//     //       style.alignItems = \"flex-start\";\n//     //       break;\n//     //     case \"Top center\":\n//     //       style.alignItems = \"center\";\n//     //       break;\n//     //     case \"Top right\":\n//     //       style.alignItems = \"flex-end\";\n//     //       break;\n//     //     case \"Bottom left\":\n//     //       style.alignItems = \"flex-start\";\n//     //       style.justifyContent = \"flex-end\";\n//     //       break;\n//     //     case \"Bottom center\":\n//     //       style.alignItems = \"center\";\n//     //       style.justifyContent = \"flex-end\";\n//     //       break;\n//     //     case \"Bottom right\":\n//     //       style.alignItems = \"flex-end\";\n//     //       style.justifyContent = \"flex-end\";\n//     //       break;\n//     //   }\n//     // }\n//     return style;\n//   }, [placement, overlayColor, zIndex, relativeLayerRef?.current]);\n\n//   const setPosition = useCallback(() => {\n//     const relativeItem = relativeLayerRef?.current?.getBoundingClientRect();\n//     const containerItem = relContainerRef?.current?.getBoundingClientRect();\n//     const style = {};\n//     if (relativeItem && containerItem) {\n//       const {\n//         x: relativeX,\n//         y: relativeY,\n//         width: relativeW,\n//         height: relativeH,\n//       } = relativeItem;\n//       const { width: containerW, height: containerH } = containerItem;\n//       style.position = \"absolute\";\n//       switch (placement) {\n//         case \"Top left\":\n//           style.top = relativeY - containerH - top;\n//           style.left = relativeX + left;\n//           break;\n//         case \"Top right\":\n//           style.top = relativeY - containerH - top;\n//           style.left = relativeX + relativeW - containerW - right;\n//           break;\n//         case \"Bottom left\":\n//           style.top = relativeY + relativeH + bottom;\n//           style.left = relativeX + left;\n//           break;\n//         case \"Bottom right\":\n//           style.top = relativeY + relativeH + bottom;\n//           style.left = relativeX + relativeW - containerW - right;\n//           break;\n//       }\n\n//       setRelativeStyle(style);\n//     } else {\n//       style.maxWidth = \"90%\";\n//       style.maxHeight = \"90%\";\n//       setRelativeStyle(style);\n//     }\n//   }, [\n//     left,\n//     right,\n//     top,\n//     bottom,\n//     placement,\n//     relativeLayerRef?.current,\n//     relContainerRef?.current,\n//   ]);\n\n//   useEffect(() => {\n//     setPosition();\n\n//     window.addEventListener(\"resize\", setPosition);\n//     window.addEventListener(\"scroll\", setPosition, true);\n\n//     return () => {\n//       window.removeEventListener(\"resize\", setPosition);\n//       window.removeEventListener(\"scroll\", setPosition, true);\n//     };\n//   }, [setPosition]);\n\n//   const onOverlayClick = useCallback(\n//     (e) => {\n//       if (\n//         onOutsideClick &&\n//         e.target.classList.contains(styles.portalPopupOverlay)\n//       ) {\n//         onOutsideClick();\n//       }\n//       e.stopPropagation();\n//     },\n//     [onOutsideClick]\n//   );\n\n//   return (\n//     <Portal>\n//       <div\n//         className={styles.portalPopupOverlay}\n//         style={popupStyle}\n//         onClick={onOverlayClick}\n//       >\n//         <div ref={relContainerRef} style={relativeStyle}>\n//           {children}\n//         </div>\n//       </div>\n//     </Portal>\n//   );\n// };\n\n// export const Portal = ({ children, containerId = \"portals\" }) => {\n//   let portalsDiv = document.getElementById(containerId);\n//   if (!portalsDiv) {\n//     portalsDiv = document.createElement(\"div\");\n//     portalsDiv.setAttribute(\"id\", containerId);\n//     document.body.appendChild(portalsDiv);\n//   }\n\n//   return createPortal(children, portalsDiv);\n// };\n// export default PortalPopup;\n"],"mappings},"metadata":{},"sourceType":"module"}